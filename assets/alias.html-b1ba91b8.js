import{_ as e,a as d}from"./alias-2-4c5fd19d.js";import{_ as i,N as a,a9 as l,ag as c}from"./framework-ffef1a40.js";const o={},s=c('<h1 id="alias" tabindex="-1"><a class="header-anchor" href="#alias" aria-hidden="true">#</a> alias</h1><p>我们先看一张示意图</p><p><img src="'+e+`" alt="alias"></p><p>我们看到两个不同的文件夹合并在一个文件夹里面了，名字一样的文件文件夹也都合并在一起了，独有的单独显示了</p><ul><li><p>例1 <code>riluo.jpg</code> 是本地1 独有的，在上面显示了</p></li><li><p>例2 两个文件夹都有<code>video</code>文件夹，但是里面的内容也会进行合并，子文件夹也同样适用于<code>同名合并</code>的展示规则</p><ul><li>两个文件夹分别有两个视频，但是有一个是同名的，最后根据 <code>同名合并</code> 的展示规则 合并后 变成了<code>3</code>个文件进行展示</li></ul></li></ul><h2 id="填写方式" tabindex="-1"><a class="header-anchor" href="#填写方式" aria-hidden="true">#</a> 填写方式</h2><p>填写方式有两种</p><ol><li><p>第一种是只可以填写子文件夹路径并且最后结尾时必须同名文件夹才可以，不推荐使用 ❌</p><ul><li><p>Paths填写示例：</p><div class="language-path line-numbers-mode" data-ext="path"><pre class="language-path"><code>/本地1/本地
/本地2/本地
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>第二种是可以直接挂载根文件夹路径，利用重命名的方式，强烈推荐使用 ✔️</p><ul><li><p>Paths填写示例：</p><div class="language-path line-numbers-mode" data-ext="path"><pre class="language-path"><code>#示例1 直接写根文件夹
本地:/本地1
本地:/本地2

#示例2 挂载不同路径文件夹进行合并
测试:/本地1/本地测试233
测试:/本地2/视频/电视剧
测试:/本地2/电视/国产电视剧/某某台
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><p>根据第二种这样我们可以将不同的文件夹进行合并展示，方便快捷</p><h3 id="使用的下载方式" tabindex="-1"><a class="header-anchor" href="#使用的下载方式" aria-hidden="true">#</a> 使用的下载方式</h3><p>​ 添加 <strong><code>alias</code></strong> 时 <code>Web代理</code> 和 <code>Webdav策略</code> 默认不修改的情况下 Paths路径填写的存储路径可以 <code>302</code>，<code>本地代理</code>，<code>下载代理URL</code>，三种模式混合播放可以进行混合播放</p><p>​ 如果你勾选了<code>Web代理</code> ，Paths路径填写的存储 如果有302模式播放的 到时候都会进行中转(本地代理模式)播放，变成代理模式，Webdav策略如果也进行了改动也会进行变化</p><p>​ 当然，是否选择更换模式您自己进选择</p><h3 id="如果你不知道你添加的云盘是什么方式怎么办" tabindex="-1"><a class="header-anchor" href="#如果你不知道你添加的云盘是什么方式怎么办" aria-hidden="true">#</a> 如果你不知道你添加的云盘是什么方式怎么办?</h3><ol><li><p>可以前往文档的相对应的文档最底部查看，有一份流程图说明</p><ul><li>如果有302的就是默认使用302方式，如果只有本地代理和下载代理URL默认的就是使用本地代理，前提是你没有进行手动选择</li></ul></li><li><p>可以前往添加存储时进行查看，选择对应的存储进行查看，例如我们查看一下阿里云和115分别是什么 方式</p><ul><li><p>从下图中看到，阿里云盘有 <code>web代理</code>选择，<code>webdav策略</code>默认是302，可以判断出阿里云盘默认使用的是302方式</p></li><li><p>从下图中看到，115网盘没有 <code>web代理</code>选择，<code>webdav策略</code>默认是本地代理，可以判断出115网盘默认使用的是本地代理方式</p></li><li><p><img src="`+d+'" alt="alias"></p></li></ul></li></ol><h3 id="其他说明" tabindex="-1"><a class="header-anchor" href="#其他说明" aria-hidden="true">#</a> 其他说明</h3><blockquote><p>如果你是使用的<code>Windows</code>，会出现如下情况，有大小写不同的文件夹也会进行二次生成 例如本地1，本地2 分别有 <code>video</code> 小写的v ，文件夹 OneDrive 有一个大写的 V <code>Video</code> 文件夹 然后会生成一个小写的 video文件夹里面只有 <code>本地1，本地2</code> 两个的文件夹所合并的文件 同时 大写的 <code>Video</code> 里面 会集合三个文件夹的文件</p></blockquote><p>这是因为Windows 大小写不敏感，video和Video会被认为是同一个文件夹,你换成Linux或者Mac就不会有这个问题了</p>',18),n=[s];function r(p,t){return a(),l("div",null,n)}const v=i(o,[["render",r],["__file","alias.html.vue"]]);export{v as default};
