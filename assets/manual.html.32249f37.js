import{_ as r,W as d,X as k,Y as n,a0 as s,Z as o,$ as a,a1 as m,y as i}from"./framework.00b47ed6.js";const g={},v=n("h3",{id:"get-alist",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#get-alist","aria-hidden":"true"},"#"),s(" Get Alist")],-1),h={href:"https://github.com/Xhofe/alist/releases",target:"_blank",rel:"noopener noreferrer"},b=n("h3",{id:"running",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#running","aria-hidden":"true"},"#"),s(" Running")],-1),_=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# Unzip the downloaded file to get the executable file:"),s(`
`),n("span",{class:"token function"},"tar"),s(),n("span",{class:"token parameter variable"},"-zxvf"),s(` alist-xxxx.tar.gz
`),n("span",{class:"token comment"},"# Grant program execution permissions:"),s(`
`),n("span",{class:"token function"},"chmod"),s(` +x alist
`),n("span",{class:"token comment"},"# Run the program"),s(`
./alist server
`),n("span",{class:"token comment"},"# Get admin's info"),s(`
./alist admin
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# Unzip the downloaded file to get the executable file:"),s(`
`),n("span",{class:"token function"},"tar"),s(),n("span",{class:"token parameter variable"},"-zxvf"),s(` alist-xxxx.tar.gz
`),n("span",{class:"token comment"},"# Grant program execution permissions:"),s(`
`),n("span",{class:"token function"},"chmod"),s(` +x alist
`),n("span",{class:"token comment"},"# Run the program"),s(`
./alist server
`),n("span",{class:"token comment"},"# Get admin's info"),s(`
./alist admin
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# Unzip the downloaded file to get the executable file:"),s(`
`),n("span",{class:"token function"},"unzip"),s(` alist-xxxx.zip
`),n("span",{class:"token comment"},"# Run the program"),s(`
.`),n("span",{class:"token punctuation"},"\\"),s(`alist.exe server
`),n("span",{class:"token comment"},"# Get admin's info"),s(`
.`),n("span",{class:"token punctuation"},"\\"),s(`alist.exe admin
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# Install"),s(`
scoop `),n("span",{class:"token function"},"install"),s(` alist
`),n("span",{class:"token comment"},"# Run"),s(`
alist server
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("p",null,[n("em",null,"The xxxx refers to the names corresponding to different systems/architectures, generally Linux-x86/64 is alist-linux-amd64. If your glibc version is too low, it is recommended to download the musl version")],-1),A=n("code",null,"start server @ 0.0.0.0:5244",-1),L=n("code",null,"http://ip:5244",-1),T=m(`<div class="custom-container info"><p class="custom-container-title">Info</p><p>For all platform, you can use follow command to silent start, stop and restart. (v3.4.0 and later)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># start server with \`--force-bin-dir\`</span>
alist start
<span class="token comment"># stop server by pid</span>
alist stop
<span class="token comment"># restart server by pid</span>
alist restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="daemon" tabindex="-1"><a class="header-anchor" href="#daemon" aria-hidden="true">#</a> Daemon</h3>`,2),S=n("p",null,[n("code",null,"vim /usr/lib/systemd/system/alist.service"),s(" add the following content, where path_alist is the path where alist is located")],-1),D=n("div",{class:"language-ini line-numbers-mode","data-ext":"ini"},[n("pre",{class:"language-ini"},[n("code",null,[n("span",{class:"token section"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token section-name selector"},"Unit"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"token key attr-name"},"Description"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"alist"),s(`
`),n("span",{class:"token key attr-name"},"After"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"network.target"),s(`
 
`),n("span",{class:"token section"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token section-name selector"},"Service"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"token key attr-name"},"Type"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"simple"),s(`
`),n("span",{class:"token key attr-name"},"WorkingDirectory"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"path_alist"),s(`
`),n("span",{class:"token key attr-name"},"ExecStart"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"path_alist/alist server"),s(`
`),n("span",{class:"token key attr-name"},"Restart"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"on-failure"),s(`
 
`),n("span",{class:"token section"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token section-name selector"},"Install"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"token key attr-name"},"WantedBy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token value attr-value"},"multi-user.target"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("p",null,[s("Then "),n("code",null,"systemctl daemon-reload"),s(", now you can use these commands to manage the program:")],-1),z=n("ul",null,[n("li",null,[s("Start: "),n("code",null,"systemctl start alist")]),n("li",null,[s("Shut down: "),n("code",null,"systemctl stop alist")]),n("li",null,[s("Self-start: "),n("code",null,"systemctl enable alist")]),n("li",null,[s("Cancel Self-start: "),n("code",null,"systemctl disable alist")]),n("li",null,[s("Status: "),n("code",null,"systemctl status alist")]),n("li",null,[s("Restart: "),n("code",null,"systemctl restart alist")])],-1),I=n("p",null,[s("Edit "),n("code",null,"~/Library/LaunchAgents/ci.nn.alist.plist"),s(" in any way and add the following content, modify "),n("code",null,"path_alist"),s(" to be the path where AList is located, and "),n("code",null,"path/to/working/dir"),s(" to be the working path of AList")],-1),W=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token prolog"},'<?xml version="1.0" encoding="UTF-8"?>'),s(`
`),n("span",{class:"token doctype"},[n("span",{class:"token punctuation"},"<!"),n("span",{class:"token doctype-tag"},"DOCTYPE"),s(),n("span",{class:"token name"},"plist"),s(),n("span",{class:"token name"},"PUBLIC"),s(),n("span",{class:"token string"},'"-//Apple//DTD PLIST 1.0//EN"'),s(),n("span",{class:"token string"},'"http://www.apple.com/DTDs/PropertyList-1.0.dtd"'),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("plist")]),s(),n("span",{class:"token attr-name"},"version"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("1.0"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
     `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dict")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("key")]),n("span",{class:"token punctuation"},">")]),s("Label"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("key")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("string")]),n("span",{class:"token punctuation"},">")]),s("ci.nn.alist"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("string")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("key")]),n("span",{class:"token punctuation"},">")]),s("KeepAlive"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("key")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("true")]),n("span",{class:"token punctuation"},"/>")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("key")]),n("span",{class:"token punctuation"},">")]),s("ProcessType"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("key")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("string")]),n("span",{class:"token punctuation"},">")]),s("Background"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("string")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("key")]),n("span",{class:"token punctuation"},">")]),s("RunAtLoad"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("key")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("true")]),n("span",{class:"token punctuation"},"/>")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("key")]),n("span",{class:"token punctuation"},">")]),s("WorkingDirectory"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("key")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("string")]),n("span",{class:"token punctuation"},">")]),s("path/to/working/dir"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("string")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("key")]),n("span",{class:"token punctuation"},">")]),s("ProgramArguments"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("key")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("array")]),n("span",{class:"token punctuation"},">")]),s(`
             `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("string")]),n("span",{class:"token punctuation"},">")]),s("path_alist/alist"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("string")]),n("span",{class:"token punctuation"},">")]),s(`
             `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("string")]),n("span",{class:"token punctuation"},">")]),s("server"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("string")]),n("span",{class:"token punctuation"},">")]),s(`
         `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("array")]),n("span",{class:"token punctuation"},">")]),s(`
     `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dict")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("plist")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("p",null,[s("Then, execute "),n("code",null,"launchctl load ~/Library/LaunchAgents/ci.nn.alist"),s(" to load the configuration, now you can use these commands to manage the program:")],-1),U=n("ul",null,[n("li",null,[s("Start: "),n("code",null,"launchctl start ~/Library/LaunchAgents/ci.nn.alist")]),n("li",null,[s("Close: "),n("code",null,"launchctl stop ~/Library/LaunchAgents/ci.nn.alist")]),n("li",null,[s("Unload configuration: "),n("code",null,"launchctl unload ~/Library/LaunchAgents/ci.nn.alist")])],-1),B=n("p",null,"Any way you know and it is no longer provided here.",-1),C=n("h3",{id:"how-to-update",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-update","aria-hidden":"true"},"#"),s(" How to update")],-1),G=n("p",null,"Download the new version of Alist and replace the previous one.",-1);function N(P,O){const u=i("ExternalLinkIcon"),c=i("Tabs"),p=i("RouterLink");return d(),k("div",null,[v,n("p",null,[s("Open "),n("a",h,[s("AList Release"),o(u)]),s(" to download the files corresponding to the system to be deployed. The latest version of the front-end has been packaged with the back-end, so there is no need to download the front-end files again.")]),b,o(c,{id:"9",data:[{title:"linux"},{title:"macOS"},{title:"Windows"},{title:"win(scoop)"}],"tab-id":"os"},{tab0:a(({title:t,value:e,isActive:l})=>[_]),tab1:a(({title:t,value:e,isActive:l})=>[f]),tab2:a(({title:t,value:e,isActive:l})=>[y]),tab3:a(({title:t,value:e,isActive:l})=>[x]),_:1},8,["data"]),w,n("p",null,[s("When you see the output of "),A,s(" and no error is reported afterwards, it means that the operation is successful. The initial password will be output when running for the first time. The program listens to port 5244 by default. Now open "),L,s(" You can see the login page, please see "),o(p,{to:"/guide/webdav.html"},{default:a(()=>[s("WebDav")]),_:1}),s(" for webdav.")]),T,o(c,{id:"38",data:[{title:"linux"},{title:"macOS"},{title:"Windows"}],"tab-id":"os"},{tab0:a(({title:t,value:e,isActive:l})=>[S,D,R,z]),tab1:a(({title:t,value:e,isActive:l})=>[I,W,E,U]),tab2:a(({title:t,value:e,isActive:l})=>[B]),_:1}),C,G])}const Y=r(g,[["render",N],["__file","manual.html.vue"]]);export{Y as default};
