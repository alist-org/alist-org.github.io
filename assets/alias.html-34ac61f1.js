import{_ as r}from"./alias-3-cc9b4644.js";import{_ as u,N as h,a9 as m,a1 as i,P as a,Q as e,W as l,ag as p,G as n}from"./framework-95cb4087.js";const f={},v=p('<h1 id="alias" tabindex="-1"><a class="header-anchor" href="#alias" aria-hidden="true">#</a> alias</h1><p>What are <code>alias</code>? <code>alias</code> is a function for path merging</p><p>Except <strong><code>download preview (read-only)</code></strong> operations ^(copy, delete, rename, offline download, upload)^ are not allowed</p><p>For example: cloud disk account 1 and cloud disk account 2 both have the folder <code>Movies</code>, but the contents may not (all) overlap</p><p><strong><code>Previously (virtual path)</code></strong>: can only be mounted to two different paths (cloud disk 1/movie, cloud disk 2/movie) or (movie\\cloud disk 1, movie\\cloud disk 2 ) <strong><code>Now(alias)</code></strong>: Provide an aggregated folder (movie) which can contain the contents of cloud disk 1 and cloud disk 2 at the same time</p><p>The folder content rules when displaying are as follows</p><ol><li>Merge with the same name: the same files (folders) are automatically merged into one</li><li>Priority of the same name: When accessing resources, the path file (folder) at the top (front) when filling in the path for each fixed access <ul><li>If the files with the same name are merged, click <strong><code> to play, and when downloading</code></strong>, it will be called first. When filling in <code>Paths</code>, the file with the 302 mode path will be used first.</li></ul></li></ol><p>Let me explain <strong><code>same name first²</code></strong> access rules</p>',8),g=e("p",null,"Example 1. Fill in the access according to the following path(302 mode has priority)",-1),_=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`local: /localtest/local1
local: /localtest/local2
local: /localtest/local3
local: /localtest/local4
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),x=e("ul",null,[e("li",null,[e("p",null,[l("1, if there is a video 1 2 3 4, each visit is "),e("code",null,"1")]),e("ul",null,[e("li",null,[l("If 1 3 4 uses the local proxy and 2 uses "),e("code",null,"302"),l(", call 2 first")])])]),e("li",null,[e("p",null,[l("2, a video 3 4 yes then every visit is "),e("code",null,"3")]),e("ul",null,[e("li",null,[l("If 3 uses a local proxy and 4 uses "),e("code",null,"302"),l(", call 4 first")])])])],-1),b=e("p",null,"Example 2. Fill in the access according to the following path(302 mode has priority)",-1),w=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`local: /localtest/local4
local: /localtest/local3
local: /localtest/local2
local: /localtest/local1
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),y=e("ul",null,[e("li",null,[e("p",null,[l("1, if a video has 1 2 3 4, each visit is "),e("code",null,"4")]),e("ul",null,[e("li",null,[l("If 1 3 4 uses the local proxy and 2 uses "),e("code",null,"302"),l(", call 2 first")])])]),e("li",null,[e("p",null,[l("2, a video 3 4 has then every visit is "),e("code",null,"4")]),e("ul",null,[e("li",null,[l("If 4 uses a local proxy and 2 uses "),e("code",null,"302"),l(", call 2 first")])])])],-1),k=e("p",null,"Example 3、 Fill in the access according to the following path(302 mode has priority)",-1),I=e("p",null,"Of course, it is not limited to only 2 folders, just write according to personal needs",-1),T=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`Local test:/local1/video
Local test:/local2/video
Test other:/test3/images
Test other:/test4/video/tv
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=e("ul",null,[e("li",null,[l("local1 local2 merged together "),e("ul",null,[e("li",null,[l("If 2 uses a local proxy and 1 uses "),e("code",null,"302"),l(", call 2 first")])])]),e("li",null,[l("Test 3 and Test 4 merged together "),e("ul",null,[e("li",null,[l("If 3 uses a local proxy and 4 uses "),e("code",null,"302"),l(", call 4 first")])])]),e("li",null,"In the above two cases, two different folders will appear for display, which will be displayed as follows without interfering with each other")],-1),E=e("p",null,[e("img",{src:r,alt:"alias"})],-1),L=e("h3",{id:"how-to-add",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-add","aria-hidden":"true"},"#"),l(" How to add")],-1),P=e("strong",null,"alias",-1);function F(V,W){const c=n("Tabs"),d=n("RouterLink");return h(),m("div",null,[v,i(c,{id:"40",data:[{title:"example 1"},{title:"example 2"},{title:"example 3"}],"tab-id":"alias"},{tab0:a(({title:t,value:o,isActive:s})=>[g,_,x]),tab1:a(({title:t,value:o,isActive:s})=>[b,w,y]),tab2:a(({title:t,value:o,isActive:s})=>[k,I,T,N,E]),_:1}),L,e("p",null,[l("Go to storage add "),i(d,{to:"/guide/drivers/alias.html"},{default:a(()=>[P]),_:1})])])}const C=u(f,[["render",F],["__file","alias.html.vue"]]);export{C as default};
